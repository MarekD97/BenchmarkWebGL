[{"D:\\Projekty\\Benchmark\\benchmark\\src\\index.js":"1","D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\home.js":"2","D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\babylon.js":"3","D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\three.js":"4","D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\results.js":"5","D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\SceneComp.jsx":"6","D:\\Projekty\\Benchmark\\benchmark\\src\\components\\panel.js":"7","d:\\Projekty\\Benchmark\\benchmark\\src\\index.js":"8","d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\home.js":"9","d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\three.js":"10","d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\results.js":"11","d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\babylon.js":"12","d:\\Projekty\\Benchmark\\benchmark\\src\\components\\panel.js":"13","d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\SceneComp.jsx":"14"},{"size":853,"mtime":1611345695569,"results":"15","hashOfConfig":"16"},{"size":2205,"mtime":1611348037807,"results":"17","hashOfConfig":"16"},{"size":1321,"mtime":1611346074306,"results":"18","hashOfConfig":"16"},{"size":4065,"mtime":1611352220453,"results":"19","hashOfConfig":"16"},{"size":12039,"mtime":1611356893046,"results":"20","hashOfConfig":"16"},{"size":3515,"mtime":1611347646811,"results":"21","hashOfConfig":"16"},{"size":1889,"mtime":1611345150532,"results":"22","hashOfConfig":"16"},{"size":853,"mtime":1611345695569,"results":"23","hashOfConfig":"24"},{"size":2205,"mtime":1611348037807,"results":"25","hashOfConfig":"24"},{"size":4065,"mtime":1611352220453,"results":"26","hashOfConfig":"24"},{"size":12039,"mtime":1611594917949,"results":"27","hashOfConfig":"24"},{"size":1321,"mtime":1611346074306,"results":"28","hashOfConfig":"24"},{"size":1889,"mtime":1611345150532,"results":"29","hashOfConfig":"24"},{"size":3515,"mtime":1611347646811,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"10d2wbr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6wp2zt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Projekty\\Benchmark\\benchmark\\src\\index.js",[],["63","64"],"D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\home.js",[],"D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\babylon.js",[],"D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\three.js",[],"D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\results.js",["65"],"import { AppBar, Button, Container, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, BarChart, Bar, ResponsiveContainer,\r\n  } from 'recharts';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deviceDetect } from 'react-device-detect';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nimport BabylonImage from '../images/babylonjs.png';\r\nimport ThreeImage from '../images/threejs.png';\r\n\r\nconst ResultsPage = (props) => {\r\n    const history = useHistory();\r\n    const [cookies] = useCookies();\r\n\r\n    // console.log(deviceDetect());\r\n    const loadTime = [\r\n        {\r\n            name: 'Czas zaÅ‚adowania sceny [ms]', \r\n            threeJS: cookies.ThreeJS.loadTime, \r\n            babylonJS: cookies.BabylonJS.loadTime,\r\n        }\r\n    ]\r\n    var fpsTime = cookies.BabylonJS.fps.map((item, index) => {\r\n        return {\r\n            time: index/10, \r\n            threeJS: cookies.ThreeJS.fps[index],\r\n            babylonJS: item\r\n        }\r\n    });\r\n    const average = (array) => {\r\n        let sum = 0;\r\n        array.map(item => {\r\n            return sum += item;\r\n        });\r\n        return (sum / array.length).toFixed(3);\r\n    }\r\n    function median(values){\r\n        if(values.length ===0) return 0;\r\n      \r\n        values.sort(function(a,b){\r\n          return a-b;\r\n        });\r\n      \r\n        var half = Math.floor(values.length / 2);\r\n      \r\n        if (values.length % 2)\r\n          return values[half];\r\n      \r\n        return ((values[half - 1] + values[half]) / 2.0).toFixed(3);\r\n      }\r\n    const resolution = () => {\r\n        const threeJS = cookies.ThreeJS.resolution;\r\n        const babylonJS = cookies.BabylonJS.resolution;\r\n        if (threeJS.width === babylonJS.width && threeJS.height === babylonJS.height) {\r\n            return threeJS;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    const exportPdf = () => {\r\n\r\n        html2canvas(document.querySelector(\"#capture\"), {scrollY: -window.scrollY}).then(canvas => {\r\n            var imgData = canvas.toDataURL('image/JPG');\r\n            var imgWidth = 210; \r\n            var pageHeight = 295;  \r\n            var imgHeight = canvas.height * imgWidth / canvas.width;\r\n            var heightLeft = imgHeight;\r\n            var doc = new jsPDF('p', 'mm');\r\n            var position = 0;\r\n\r\n            doc.addImage(imgData, 'JPG', 0, position, imgWidth, imgHeight);\r\n            heightLeft -= pageHeight;\r\n\r\n            while (heightLeft >= 0) {\r\n                position = heightLeft - imgHeight;\r\n                doc.addPage();\r\n                doc.addImage(imgData, 'JPG', 0, position, imgWidth, imgHeight);\r\n                heightLeft -= pageHeight;\r\n            }\r\n            doc.save( 'results.pdf');\r\n       });\r\n   \r\n    }\r\n    return (\r\n        <div>\r\n            <AppBar position='static'>\r\n                <Toolbar>\r\n                    <Typography variant='h6' color='inherit' style={{flexGrow: 1}}>\r\n                        Test results\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => {history.push('/')}}>Home</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container id='capture' maxWidth='md'>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                    flexWrap: 'wrap',\r\n                    margin: '36px 0'\r\n                }}>\r\n                    <img src={ThreeImage} alt=\"ThreeJS\" style={{\r\n                        height: '120px',\r\n                        width: 'auto',\r\n                        objectFit: 'contain'\r\n                        }}/>\r\n                    <img src={BabylonImage} alt=\"BabylonJS\" style={{\r\n                        height: '120px',\r\n                        width: 'auto',\r\n                        objectFit: 'contain'\r\n                        }}/>\r\n                </div>\r\n                <Typography variant='h6' align='center' gutterBottom style={{margin: '36px 0'}}>\r\n                    Benchmark results\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {(deviceDetect().isMobile || deviceDetect().isTablet) &&\r\n                                <>\r\n                                    <TableCell>Operating System</TableCell>\r\n                                    <TableCell>Vendor</TableCell>\r\n                                    <TableCell>Model</TableCell>\r\n                                </>\r\n                                }\r\n                                {(!deviceDetect().isMobile && !deviceDetect().isTablet) &&\r\n                                <>\r\n                                    <TableCell>Operating System</TableCell>\r\n                                    <TableCell>Browser name</TableCell>\r\n                                    <TableCell>Browser version</TableCell>\r\n                                </>\r\n                                }\r\n                                <TableCell>Viewport resolution</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                {(deviceDetect().isMobile || deviceDetect().isTablet) &&\r\n                                <>\r\n                                    <TableCell>{deviceDetect().os} {deviceDetect().osVersion}</TableCell>\r\n                                    <TableCell>{deviceDetect().vendor}</TableCell>\r\n                                    <TableCell>{deviceDetect().model}</TableCell>\r\n                                </>\r\n                                }\r\n                                {(!deviceDetect().isMobile && !deviceDetect().isTablet) &&\r\n                                <>\r\n                                    <TableCell>{deviceDetect().osName} {deviceDetect().osVersion}</TableCell>\r\n                                    <TableCell>{deviceDetect().browserName}</TableCell>\r\n                                    <TableCell>{deviceDetect().browserFullVersion}</TableCell>\r\n                                </>\r\n                                }\r\n                                <TableCell>\r\n                                    {resolution() && `${resolution().width}px x ${resolution().height}px`}\r\n                                    {!resolution() && 'Undefined'}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Typography variant='h6' align='center' gutterBottom style={{margin: '36px 0'}}>\r\n                    Scene loading time [ms]\r\n                </Typography>\r\n                <ResponsiveContainer width='100%' height={300}>\r\n                    <BarChart\r\n                        width={400}\r\n                        height={300}\r\n                        data={loadTime}\r\n                        margin={{\r\n                        top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <Bar dataKey=\"threeJS\" fill=\"#8884d8\" />\r\n                        <Bar dataKey=\"babylonJS\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n                <Typography variant='h6' align='center' gutterBottom>\r\n                    Frames per second during the test [frames / s]\r\n                </Typography>\r\n                <ResponsiveContainer width='100%' height={300}>\r\n                    <LineChart\r\n                        data={fpsTime}\r\n                        margin={{\r\n                        top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis \r\n                            dataKey=\"time\"\r\n                            name='Czas'\r\n                            unit='s' \r\n                            ticks={fpsTime.filter((item, index) => {\r\n                            return ((item.time % 0.5) === 0)\r\n                        }).map(item => item.time)} />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                        <Line type=\"monotone\" dataKey=\"threeJS\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"babylonJS\" stroke=\"#82ca9d\" />\r\n                        {/* <Line type=\"monotone\" dataKey=\"babylonJS\" stroke=\"none\" dot={{stroke: \"#82ca9d\"}} activeDot={{r: 8}} /> */}\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n                <TableContainer>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>ThreeJS</TableCell>\r\n                                <TableCell>BabylonJS</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>FPS average</TableCell>\r\n                                <TableCell>{average(fpsTime.map(item => item.threeJS))}</TableCell>\r\n                                <TableCell>{average(fpsTime.map(item => item.babylonJS))}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>FPS median</TableCell>\r\n                                <TableCell>{median(fpsTime.map(item => {return item.threeJS}))}</TableCell>\r\n                                <TableCell>{median(fpsTime.map(item => {return item.babylonJS}))}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>FPS maximum</TableCell>\r\n                                <TableCell>{Math.max(...fpsTime.map(item => {return item.threeJS})).toFixed(3)}</TableCell>\r\n                                <TableCell>{Math.max(...fpsTime.map(item => {return item.babylonJS})).toFixed(3)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>FPS minimum</TableCell>\r\n                                <TableCell>{Math.min(...fpsTime.map(item => {return item.threeJS})).toFixed(3)}</TableCell>\r\n                                <TableCell>{Math.min(...fpsTime.map(item => {return item.babylonJS})).toFixed(3)}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Container>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-evenly',\r\n                margin: '36px 0',\r\n            }}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => history.push('/three-js')}>\r\n                    Repeat test\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => exportPdf()}>\r\n                    Download results to PDF\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultsPage;","D:\\Projekty\\Benchmark\\benchmark\\src\\pages\\SceneComp.jsx",[],["66","67"],"D:\\Projekty\\Benchmark\\benchmark\\src\\components\\panel.js",[],"d:\\Projekty\\Benchmark\\benchmark\\src\\index.js",[],["68","69"],"d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\home.js",[],"d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\three.js",[],"d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\results.js",["70"],"d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\babylon.js",[],"d:\\Projekty\\Benchmark\\benchmark\\src\\components\\panel.js",[],"d:\\Projekty\\Benchmark\\benchmark\\src\\pages\\SceneComp.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":37,"nodeType":"77","messageId":"78","endLine":1,"endColumn":42},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":37,"nodeType":"77","messageId":"78","endLine":1,"endColumn":42},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar",["83"],["84"],["83"],["84"],"no-global-assign","no-unsafe-negation"]